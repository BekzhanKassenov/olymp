/* DO NOT EDIT THIS FILE - it is machine generated */

import sun.misc.Unsafe;
import java.lang.reflect.Field;

class Constants {
    static final int intSize = 4;
    static final int doubleSize = 8;
    static final int shortSize = 2;
    static final int PLAYERS_COUNT = 2;
    static final double FIELD_SIZE = 1000.0;
    static final int FACTORY_CLASS_COUNT = 1;
    static final int ROBOT_CLASS_COUNT = 1;
    static final int PROJECTILE_CLASS_COUNT = 1;
    static final int MAX_FACTORY_COUNT = 10;
    static final int MAX_ROBOT_COUNT = 1024;
    static final int MAX_PROJECTILE_COUNT = 5120;
    static final int MAX_UNITS_COUNT = MAX_FACTORY_COUNT + MAX_ROBOT_COUNT + MAX_PROJECTILE_COUNT;
    static final int WORLD_DATA_SIZE = WorldData.size;
    protected static final Unsafe unsafe = getUnsafe();

    private static Unsafe getUnsafe() {
        Field theUnsafe = null;
        for(Field f : Unsafe.class.getDeclaredFields()) {
            if (f.getName().equals("theUnsafe")) {
                theUnsafe = f;
                break;
            }
        }
        theUnsafe.setAccessible(true);
        Unsafe res = null;
        try {
            res = (Unsafe)theUnsafe.get(null);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
            System.exit(1);
        }
        theUnsafe.setAccessible(false);

        return res;
    }
}
