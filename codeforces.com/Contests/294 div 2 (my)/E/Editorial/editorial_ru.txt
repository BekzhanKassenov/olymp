**Автор:** [user:Bekzhan.Kassenov]

В задаче необходимо было отвечать на следующие запросы на дереве: для заданных пар вершин найти количество вершин, равноудаленных от них.

**Принятые обозначения:**

$dist(a, b)$ --- расстояние между вершинами $a$ и $b$.

$LCA(a, b)$ --- [наименьший общий предок](https://ru.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B8%D0%BC%D0%B5%D0%BD%D1%8C%D1%88%D0%B8%D0%B9_%D0%BE%D0%B1%D1%89%D0%B8%D0%B9_%D0%BF%D1%80%D0%B5%D0%B4%D0%BE%D0%BA) вершин $a$ и $b$.

$depth[a]$ --- расстояние от корня дерева до вершины $a$.

$size[a]$ --- размер поддерева, корнем которой является вершина $a$.

На каждой картинке вершины, покрашенные в зеленый цвет - вершины из ответа, вершины, покрашенные в синий цвет - вершины из запросов.

**Препроцессинг:** Для начала необходимо считать ребра дерева и построить по ним структуру данных для нахождения LCA (удобнее всего использовать двоичный подъем, так как в будущем он понадобится для других целей). 
Асимптотика: $O(NlogN)$

**Ответы на запросы:**

Для каждого запроса необходимо рассмотреть несколько случаев:

1) $a = b$. В этом случае ответ равен $n$.

2) $dist(a, b)$ нечетно. Тогда ответом будет $0$.

3) $dist(a, l) = dist(b, l)$, где $l = LCA(a, b)$. Двоичным подъемом найдем сыновей вершины $l$, которые являются предками вершин $a$ и $b$ (обозначим их как $aa$ и $bb$ соответственно). Ответом будет $n - size[aa] - size[bb]$.

4) Все остальные случаи. Предпоположим, что $depth[a] > depth[b]$. Тогда найдем с помощью двоичного подъема $dist(a, b) / 2$-ого предка вершины $a$ (обозначим его как $p1$), $dist(a, b) / 2 - 1$-ого предка вершины $a$ (обозначим его как $p2$). Ответом будет $size[p1] - size[p2]$.
Асимптотика: $O(logN)$ на запрос, $O(MlogN)$ на все запросы.

**Итоговая асимптотика:** $O(MlogN + NlogN)$
